edition: 1.0.0
name: fc-3d-cartoonization-2
access: default
vars:
  region: "cn-hangzhou"
  # region: "{{ region }}"
  service: 'fc-3d-cartoonization-2'
services:
  fc-3d-cartoonization-2:
    component: fc
    props:
      region: "cn-hangzhou"
      # region: ${vars.region}
      service:
        description: fc-3d-cartoonization-2
        internetAccess: true
        ossMountConfig:
          mountPoints: []
        name: "fc-3d-cartoonization-2"
      function:
        handler: index.handler
        timeout: 7200
        diskSize: 10240
        caPort: 8080
        instanceType: fc.gpu.tesla.1
        runtime: custom-container
        cpu: 8
        customContainerConfig:
          args: ''
          accelerationType: Default
          image: "registry.cn-hangzhou.aliyuncs.com/fc-stable-diffusion/3d-cartoonization:0.3"
          accelerationInfo:
            status: Preparing
          command: ''
          webServerMode: true
        instanceConcurrency: 100
        memorySize: 32768
        environmentVariables: {}
        gpuMemorySize: 16384
        name: fc-3d-cartoonization-2
        asyncConfiguration: {}
      triggers:
        - name: defaultTrigger
          description: ''
          type: http
          qualifier: LATEST
          config:
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            authType: anonymous
            disableURLInternet: false
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
  # stable-diffusion-portal:
    # component: fc
    # actions:
    #   pre-deploy:
    #     - run: npm i --force
    #       path: ./code
    # props:
    #   region: ${vars.region}
    #   service:
    #     description: stable-diffusion
    #     internetAccess: true
    #     ossMountConfig:
    #       mountPoints: []
    #     name: ${vars.service}
    #   function:
    #     handler: index.handler
    #     description: stable-diffusion web界面
    #     timeout: 6000
    #     diskSize: 512
    #     caPort: 8080
    #     layers:
    #       - acs:fc:${vars.region}:official:layers/Nodejs16/versions/2
    #     instanceType: c1
    #     runtime: custom
    #     cpu: 4
    #     instanceConcurrency: 10
    #     memorySize: 8192
    #     environmentVariables:
    #       proxyUrl: ${stable-diffusion-original.output.url.custom_domain[0].domain}
    #       PATH: >-
    #         /opt/nodejs16/bin::/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin:/opt/bin:/code:/code/bin
    #       NODE_PATH: /opt/nodejs/node_modules
    #     name: stable-diffusion-portal
    #     asyncConfiguration: {}
    #     codeUri: 'code'
    #   triggers:
    #     - name: sd-portal
    #       description: ''
    #       type: http
    #       config:
    #         methods:
    #           - GET
    #           - POST
    #           - PUT
    #           - DELETE
    #           - HEAD
    #           - OPTIONS
    #         authType: anonymous
    #         disableURLInternet: false
    #   customDomains:
    #     - domainName: auto
    #       protocol: HTTP
    #       routeConfigs:
    #         - path: /*
